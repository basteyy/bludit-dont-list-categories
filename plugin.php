<?php

class pluginDontListCategories extends Plugin
{

    /** @var string $plugin_url Url of the plugin in the fronted */
    private string $plugin_url;

    /** @var string $db_field_name Name of the db field */
    private string $db_field_name = 'dontListCategories';

    /**
     * @return void
     */
    public function init()
    {
        $this->dbFields = array(
            'label'              => 'Hidden Categories List',
            $this->db_field_name => ''
        );
    }

    /**
     * Update the db field for the plugin
     * @return bool
     */
    public function post(): bool
    {
        // Check if the form was sent
        if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update_hidden_categories'])) {
            global $site;

            $list = [];

            if(isset($_POST['ignore'])) {
                foreach ($_POST['ignore'] as $category_key => $state) {
                    if ('on' === $state) {
                        $list[$category_key] = 1;
                    }
                }
            }

            $this->setField($this->db_field_name, base64_encode(json_encode($list)));
        }

        return parent::post(); // TODO: Change the autogenerated stub
    }

    /**
     * The plugin
     * @return void
     * @throws Exception
     */
    public function beforeSiteLoad()
    {
        if ($this->getValue($this->db_field_name)) {
            global $content;

            $show = count($content);
            $categories = json_decode(base64_decode($this->getValue($this->db_field_name)), true);

            if (isset($categories) && count($categories) > 0) {
                $content = array_filter($content, function ($page) use ($categories) {
                    /** @var Page $page */
                    return !isset($categories[$page->categoryKey()]);
                });


                if(count($content) < $show) {
                    global $pages, $itemsPerPage;

                    $all = $pages->getList(2, -1, true);
                    $all_count = count($all);


                    foreach ($all as $_page) {

                        $page = new Page($_page);

                        if(!isset($categories[$page->categoryKey()])) {
                            $content[] = $page;
                        }

                        if(count($content) === $itemsPerPage) {
                            break;
                        }
                    }
                }
            }
        }
    }

    /**
     * Return the form for the admin settings
     * @return string
     */
    public function form()
    {
        global $L, $categories, $security;
        include $this->phpPath() . '/php/form.php';
        return $html ?? '';
    }

}

